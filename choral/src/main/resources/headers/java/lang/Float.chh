/* Choral Header Version 0.1 */
package java.lang;

public final class Float@A extends Number@A implements Comparable@A<Float> {

    public static final float@A POSITIVE_INFINITY;

    public static final float@A NEGATIVE_INFINITY;

    public static final float@A NaN;

    public static final float@A MAX_VALUE;

    public static final float@A MIN_NORMAL;

    public static final float@A MIN_VALUE ;

    public static final int@A MAX_EXPONENT;

    public static final int@A MIN_EXPONENT;

    public static final int@A SIZE;

    public static final Class@A<Float> TYPE ;

    public static String@A toString(float@A f) { }

    public static String@A toHexString(float@A f) { }

    public static Float@A valueOf(String@A s) { }

    public static Float@A valueOf(float@A f) { }

    public static float@A parseFloat(String@A s) { }

    static public boolean@A isNaN(float@A v) { }

    static public boolean@A isInfinite(float@A v) { }

    public Float(float@A value) { }

    public Float(double@A value) { }

    public Float(String@A s) { }

    public boolean@A isNaN() { }

    public boolean@A isInfinite() { }

    public String@A toString() { }

    public byte@A byteValue() { }

    public short@A shortValue() { }

    public int@A intValue() { }

    public long@A longValue() { }

    public float@A floatValue() { }

    public double@A doubleValue() { }

    public int@A hashCode() { }

    public boolean@A equals(Object@A obj) { }

    public static int@A floatToIntBits(float@A value) { }

    public static int@A floatToRawIntBits(float@A value) { }

    public static float@A intBitsToFloat(int@A bits) { }

    public int@A compareTo(Float@A anotherFloat) { }

    public static int@A compare(float@A f1, float@A f2) { }

    private static final long@A serialVersionUID;
}